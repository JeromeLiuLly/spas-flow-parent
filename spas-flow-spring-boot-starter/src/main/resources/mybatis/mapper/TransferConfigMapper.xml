<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.candao.spas.flow.sdk.mapper.TransferConfigMapper">

    <parameterMap id="transferObj" type="com.candao.spas.flow.core.model.db.TransferEventVo">
        <parameter property="output" typeHandler="com.candao.spas.flow.sdk.typehandle.JsonTypeHandler"/>
        <parameter property="inputParamTypesValues" typeHandler="com.candao.spas.flow.sdk.typehandle.StringToListTypeHandler"/>
    </parameterMap>

    <resultMap id="transfer" type="com.candao.spas.flow.core.model.db.TransferEventVo">
        <result column="flowId" property="flowId"/>
        <result column="nodeId" property="nodeId"/>
        <result column="nodeName" property="nodeName"/>
        <result column="nodeType" property="nodeType"/>
        <result column="component" property="component"/>
        <result column="front" property="front"/>
        <result column="next" property="next"/>
        <result column="eventName" property="eventName"/>
        <result column="desc" property="desc"/>
        <result column="input" property="input"/>
        <result column="output" property="output"  typeHandler="com.candao.spas.flow.sdk.typehandle.JsonTypeHandler"/>
        <result column="url" property="url"/>
        <result column="requertType" property="requertType"/>
        <result column="serverPort" property="serverPort"/>
        <result column="methodName" property="methodName" />
        <result column="inputParamTypesValues" property="inputParamTypesValues" typeHandler="com.candao.spas.flow.sdk.typehandle.StringToListTypeHandler"/>
        <result column="convertRule" property="convertRule"/>
        <result column="timeout" property="timeout"/>
        <result column="eventType" property="eventType"/>
        <result column="version" property="version"/>
        <result column="status" property="status"/>
    </resultMap>

    <select id="getTransferById" resultMap="transfer">
        SELECT
        *
        FROM transfer_event_config as o
        <where>
            1=1
            <if test="flowId != null and flowId != ''">
                AND o.flowId = #{flowId}
            </if>
            <if test="nodeId != null and nodeId != ''">
                AND o.nodeId = #{nodeId}
                AND o.status = 1
            </if>
        </where>
    </select>

    <select id="findTransferById" resultMap="transfer">
        SELECT
        *
        FROM transfer_event_config as o
        <where>
            1=1
            <if test="flowId != null and flowId != ''">
                AND o.flowId = #{flowId}
                AND o.status = 1
            </if>
        </where>
    </select>

    <select id="findTransfers" resultMap="transfer">
        SELECT
        *
        FROM transfer_event_config as o
        <where>
            o.status = 1
        </where>
    </select>

    <select id="findTransfersGroupByFlowId" resultType="java.lang.String">
        SELECT
        o.flowId
        FROM transfer_event_config as o
        <where>
            o.status = 1
        </where>
        GROUP BY o.flowId
    </select>

    <insert id="saveTransfer" parameterType="com.candao.spas.flow.core.model.db.TransferEventVo">
        INSERT INTO transfer_event_config ( flowId,nodeId,nodeName,nodeType,component,front,next,eventName,description,input,output,url,
        fullLink,requertType,serverPort,methodName,inputParamTypesValues,convertRule,timeout,eventType,version,status )
        VALUES
        (
         #{flowId, jdbcType=VARCHAR},
         #{nodeId, jdbcType=VARCHAR},
         #{nodeName, jdbcType=VARCHAR},
         #{nodeType, jdbcType=VARCHAR},
         #{component, jdbcType=VARCHAR},
         #{front, jdbcType=VARCHAR},
         #{next, jdbcType=VARCHAR},
         #{eventName, jdbcType=VARCHAR},
         #{description, jdbcType=VARCHAR},
         #{input, jdbcType=VARCHAR},
         #{output, jdbcType=VARCHAR, typeHandler=com.candao.spas.flow.sdk.typehandle.JsonTypeHandler },
         #{url, jdbcType=VARCHAR},
         #{fullLink, jdbcType=VARCHAR},
         #{requertType, jdbcType=VARCHAR},
         #{serverPort, jdbcType=VARCHAR},
         #{methodName, jdbcType=VARCHAR},
         #{inputParamTypesValues, jdbcType=VARCHAR, typeHandler=com.candao.spas.flow.sdk.typehandle.StringToListTypeHandler },
         #{convertRule, jdbcType=VARCHAR},
         #{timeout, jdbcType=INTEGER},
         #{eventType, jdbcType=VARCHAR},
         #{version, jdbcType=VARCHAR},
         #{status, jdbcType=INTEGER}
         )
    </insert>

    <insert id="saveTransfers" parameterType="java.util.List">
        INSERT INTO transfer_event_config ( flowId,nodeId,nodeName,nodeType,component,front,next,eventName,description,input,output,url,
        fullLink,requertType,serverPort,methodName,inputParamTypesValues,convertRule,timeout,eventType,version,status )
        VALUES
        <foreach collection="vos" item="item" index="index" separator="," >
        (
         #{item.flowId, jdbcType=VARCHAR},
         #{item.nodeId, jdbcType=VARCHAR},
         #{item.nodeName, jdbcType=VARCHAR},
         #{item.nodeType, jdbcType=VARCHAR},
         #{item.component, jdbcType=VARCHAR},
         #{item.front, jdbcType=VARCHAR},
         #{item.next, jdbcType=VARCHAR},
         #{item.eventName, jdbcType=VARCHAR},
         #{item.description, jdbcType=VARCHAR},
         #{item.input, jdbcType=VARCHAR},
         #{item.output, jdbcType=VARCHAR, typeHandler=com.candao.spas.flow.sdk.typehandle.JsonTypeHandler },
         #{item.url, jdbcType=VARCHAR},
         #{item.fullLink, jdbcType=VARCHAR},
         #{item.requertType, jdbcType=VARCHAR},
         #{item.serverPort, jdbcType=VARCHAR},
         #{item.methodName, jdbcType=VARCHAR},
         #{item.inputParamTypesValues, jdbcType=VARCHAR, typeHandler=com.candao.spas.flow.sdk.typehandle.StringToListTypeHandler },
         #{item.convertRule, jdbcType=VARCHAR},
         #{item.timeout, jdbcType=INTEGER},
         #{item.eventType, jdbcType=VARCHAR},
         #{item.version, jdbcType=VARCHAR},
         #{item.status, jdbcType=INTEGER}
         )
        </foreach>
    </insert>
</mapper>